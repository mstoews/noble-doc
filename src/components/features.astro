---
import { Icon } from "astro-icon/components";
import ContentSection from "../components/content-section.astro";
import type { FeatureItem } from "../types";

const features: Array<FeatureItem> = [
  {
    title: "Follows general accounting principles",
    description:
      "Noble Ledger is built on the principles of double-entry accounting, ensuring that all transactions are recorded accurately and transparently.",
    icon: "mdi:book-open-variant",
  },
  {
    title: "Financial reports",
    description:
      "Generate financial reports such as balance sheets, income statements, and cash flow statements to help you understand your organization's financial health.",
    icon: "mdi:file-document",
  },
  {
    title: "Manage Artifact Documents",
    description:
      "Easily manage and store important documents related to your condominium non-profit, such as meeting minutes, bylaws, and financial statements.",
    icon: "mdi:folder-account",
  },
  {
    title: "Cloud Native and Secure",
    description:
      "Noble Ledger is built on a cloud-native architecture, ensuring that your data is secure and accessible from anywhere.",
    icon: "mdi:cloud-check",
  },
  {
    title: "Secure and Private",
    description:
      "Noble Ledger is designed with security and privacy in mind, ensuring that your data is protected and only accessible to authorized users.",
    icon: "mdi:shield-lock",
  },
  {
    title: "Support and Community",
    description:
      "Join a community of users and developers who are passionate about improving the Noble Ledger experience. Get support, share ideas, and collaborate on new features.",
    icon: "mdi:account-group",
  },
];
---

<ContentSection title="Noble Ledger Features" id="features">
  <Fragment slot="lead">
    Noble Ledger is a powerful accounting and management tool specifically designed for the needs of 
    condominium non-profits. It offers a comprehensive set of features to help organizations manage their finances.
  </Fragment>
  <ul class="grid max-w-6xl grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
    {
      features.map(({ title, description, icon }) => (
        <li class="flex flex-col items-center gap-4 border border-default bg-offset p-6">
          <div class="size-16 rounded-full border-2 border-current p-3">
            <Icon name={icon} class="size-full" />
          </div>
          <p class="text-center font-extrabold text-xl">{title}</p>
          <p class="text-center text-offset text-sm">{description}</p>
        </li>
      ))
    }
  </ul>
</ContentSection>
